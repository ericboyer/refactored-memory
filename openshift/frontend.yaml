---
apiVersion: image.openshift.io/v1
kind: ImageStream
metadata:
  labels:
    app: frontend
  name: frontend
spec:
  lookupPolicy:
    local: false
---
apiVersion: build.openshift.io/v1
kind: BuildConfig
metadata:
  labels:
    app: frontend
  name: frontend
spec:
  failedBuildsHistoryLimit: 5
  nodeSelector: null
  output:
    to:
      kind: ImageStreamTag
      name: frontend:latest
  postCommit: {}
  resources: {}
  runPolicy: Serial
  source:
    contextDir: /
    git:
      ref: feature/tektonci
      uri: https://github.com/ericboyer/refactored-memory.git
    type: Git
  strategy:
    dockerStrategy:
      dockerfilePath: src/resources/container/client.Dockerfile
      env:
        - name: BIND_PORT
          valueFrom:
            configMapKeyRef:
              key: BIND_PORT
              name: refactored-memory
        - name: NEXUS_HOSTNAME
          valueFrom:
            configMapKeyRef:
              key: NEXUS_HOSTNAME
              name: refactored-memory
        - name: PYPI_GROUP_REPO
          valueFrom:
            configMapKeyRef:
              key: PYPI_GROUP_REPO
              name: refactored-memory
        - name: NAMESPACE
          value: ${NAMESPACE}
    type: Docker
  successfulBuildsHistoryLimit: 5
  triggers:
    - type: ConfigChange
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: frontend
  name: frontend
spec:
  ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
  selector:
    app: frontend
    deploymentconfig: frontend
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
labels:
  app: frontend
name: frontend
spec:
replicas: 1
revisionHistoryLimit: 5
selector:
  app: frontend
  deploymentconfig: frontend
strategy:
  activeDeadlineSeconds: 21600
  resources: {}
  rollingParams:
    intervalSeconds: 1
    maxSurge: 25%
    maxUnavailable: 25%
    timeoutSeconds: 600
    updatePeriodSeconds: 1
  type: Rolling
template:
  metadata:
    labels:
      app: frontend
      deploymentconfig: frontend
  spec:
    containers:
      - env:
        - name: VERSION
          value: 0.0.0 (frontend-dev)
        - name: RUN_PORT
          valueFrom:
            configMapKeyRef:
              key: RUN_PORT
              name: refactored-memory
        - name: PORT
          valueFrom:
            configMapKeyRef:
              key: BIND_PORT
              name: refactored-memory
        image: image-registry.openshift-image-registry.svc:5000/ebo-pipelines/frontend
        imagePullPolicy: Always
        name: frontend
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
    dnsPolicy: ClusterFirst
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    terminationGracePeriodSeconds: 30
test: false
triggers: []
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  labels:
    app: frontend
  name: frontend
spec:
  port:
    targetPort: 8080-tcp
  to:
    kind: Service
    name: frontend
    weight: 100
  wildcardPolicy: None