---
apiVersion: v1
kind: Template
metadata:
  name: refactored-memory-client
  annotations:
    app.openshfit.io/display-name: Deployment template for client-side python application demonstration.
objects:
  - apiVersion: image.openshift.io/v1
    kind: ImageStream
    metadata:
      labels:
        app: ${APP_NAME}
      name: ${APP_NAME}
    spec:
      lookupPolicy:
        local: false
  - apiVersion: build.openshift.io/v1
    kind: BuildConfig
    metadata:
      labels:
        app: ${APP_NAME}
      name: ${APP_NAME}
    spec:
      failedBuildsHistoryLimit: 5
      nodeSelector: null
      output:
        to:
          kind: ImageStreamTag
          name: ${APP_NAME}:latest
      postCommit: {}
      resources: {}
      runPolicy: Serial
      source:
        contextDir: /
        git:
          ref: ${BRANCH}
          uri: ${REPO}
        type: Git
      strategy:
        dockerStrategy:
          dockerfilePath: src/resources/container/client.Dockerfile
          env:
            - name: BIND_PORT
              valueFrom:
                configMapKeyRef:
                  key: BIND_PORT
                  name: refactored-memory
            - name: NEXUS_HOSTNAME
              valueFrom:
                configMapKeyRef:
                  key: NEXUS_HOSTNAME
                  name: refactored-memory
            - name: PYPI_GROUP_REPO
              valueFrom:
                configMapKeyRef:
                  key: PYPI_GROUP_REPO
                  name: refactored-memory
            - name: NAMESPACE
              value: ${NAMESPACE}
        type: Docker
      successfulBuildsHistoryLimit: 5
      triggers:
        - generic:
            secretReference:
              name: ${WEBHOOK_SECRET}
          type: Generic
        - github:
            secretReference:
              name: ${WEBHOOK_SECRET}
          type: GitHub
        - type: ConfigChange
  - apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: ${APP_NAME}
      name: ${APP_NAME}
    spec:
      ports:
        - name: 8080-tcp
          port: 8080
          protocol: TCP
          targetPort: 8080
      selector:
        app: ${APP_NAME}
        deploymentconfig: ${APP_NAME}
      sessionAffinity: None
      type: ClusterIP
  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      labels:
        app: ${APP_NAME}
      name: ${APP_NAME}
    spec:
      replicas: 1
      revisionHistoryLimit: 5
      selector:
        app: ${APP_NAME}
        deploymentconfig: ${APP_NAME}
      strategy:
        activeDeadlineSeconds: 21600
        resources: {}
        rollingParams:
          intervalSeconds: 1
          maxSurge: 25%
          maxUnavailable: 25%
          timeoutSeconds: 600
          updatePeriodSeconds: 1
        type: Rolling
      template:
        metadata:
          labels:
            app: ${APP_NAME}
            deploymentconfig: ${APP_NAME}
        spec:
          containers:
            - env:
              - name: VERSION
                value: 0.0-0 (${APP_NAME}-dev)
              - name: RUN_PORT
                valueFrom:
                  configMapKeyRef:
                    key: RUN_PORT
                    name: refactored-memory
              - name: PORT
                valueFrom:
                  configMapKeyRef:
                    key: BIND_PORT
                    name: refactored-memory
              image: image-registry.openshift-image-registry.svc:5000/${NAMESPACE}/${APP_NAME}
              imagePullPolicy: Always
              name: ${APP_NAME}
              resources: {}
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          terminationGracePeriodSeconds: 30
      test: false
      triggers: []
  - apiVersion: route.openshift.io/v1
    kind: Route
    metadata:
      labels:
        app: ${APP_NAME}
      name: ${APP_NAME}
    spec:
      port:
        targetPort: 8080-tcp
      to:
        kind: Service
        name: ${APP_NAME}
        weight: 100
      wildcardPolicy: None
parameters:
  - name: APP_NAME
    value: refactored-memory-client
    description: The application name that all objects will be assigned.
  - name: REPO
    value: https://github.com/ericboyer/refactored-memory.git
    description: The source repository
  - name: BRANCH
    value: master
    description: The repository branch to reference
  - name: NAMESPACE
    value: refactored-memory-dev
    description: The namespace of the development version of this application
  - name: WEBHOOK_SECRET
    generate: expression
    from: '[a-zA-Z0-9]{8}'
    description: The generated secret for webhooks